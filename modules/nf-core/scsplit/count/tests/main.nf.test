nextflow_process {

    name "Test Process SCSPLIT_COUNT"
    script "../main.nf"
    config "./nextflow.config"
    process "SCSPLIT_COUNT"

    tag "modules"
    tag "modules_nfcore"
    tag "scsplit"
    tag "scsplit/count"

    test("Homo sapiens - bam, vcf") {
        tag "scsplit_count_chr21"

        setup {
            run("SAMTOOLS_INDEX") {
                script "../../../samtools/index/main.nf"
                process {
                    """
                    input[0] =[
                            [ id:'test1', single_end:false ], // meta map
                            file(params.modules_testdata_base_path + '/genomics/homo_sapiens/demultiplexing/chr21.bam', checkIfExists: true)                        
                        ]
            
                    """
                }
            }

        }

        when {
            process {
                """ 
                bam_channel = Channel.of([
                        [
                            [ id:'test', single_end:false ], // meta map
                            file(params.modules_testdata_base_path + '/genomics/homo_sapiens/demultiplexing/chr21.bam', checkIfExists: true)
                        ]
                    ] )  
                bai_channel = SAMTOOLS_INDEX.out.bai

                vcf_barcode_channel = Channel.of([
                        [
                            [ id:'test', single_end:false ],
                            file(params.modules_testdata_base_path + '/genomics/homo_sapiens/demultiplexing/donor_genotype_chr21.vcf', checkIfExists: true),
                            file(params.barcodes, checkIfExists: true)
                        ]
                    ] )

                input[0] = bam_channel.join(bai_channel).join(vcf_barcode_channel)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
    test("jurkat_293t - bam, vcf - stub") {

        options "-stub"

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.bam, checkIfExists: true),
                    file(params.bai, checkIfExists: true),
                    file(params.vcf, checkIfExists: true),
                    file(params.barcodes, checkIfExists: true),
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
